// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2456.Hercules;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DoubleSolenoid pincherFingers;
    public static DoubleSolenoid pincherTilter;
    public static DoubleSolenoid pincherEjector;
    public static AnalogInput pincherGearDetector;
    public static DoubleSolenoid funnelTilter;
    public static SpeedController winchController;
    public static AnalogInput airPressureSensor;
    public static Compressor airCompressor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pincherFingers = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("Pincher", "Fingers", pincherFingers);
        
        pincherTilter = new DoubleSolenoid(0, 2, 3);
        LiveWindow.addActuator("Pincher", "Tilter", pincherTilter);
        
        pincherEjector = new DoubleSolenoid(0, 4, 5);
        LiveWindow.addActuator("Pincher", "Ejector", pincherEjector);
        
        pincherGearDetector = new AnalogInput(0);
        LiveWindow.addSensor("Pincher", "GearDetector", pincherGearDetector);
        
        funnelTilter = new DoubleSolenoid(0, 6, 7);
        LiveWindow.addActuator("Funnel", "Tilter", funnelTilter);
        
        winchController = new Spark(0);
        LiveWindow.addActuator("Winch", "WinchController", (Spark) winchController);
        
        airPressureSensor = new AnalogInput(1);
        LiveWindow.addSensor("Air", "AirPressureSensor", airPressureSensor);
        
        airCompressor = new Compressor(0);
        
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
