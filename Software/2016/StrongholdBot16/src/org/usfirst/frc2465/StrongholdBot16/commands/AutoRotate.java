// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2465.StrongholdBot16.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2465.StrongholdBot16.Robot;

/**
 *
 */
public class  AutoRotate extends Command {
	
	boolean previousAutoRotate = false;
	double angle;
	int count;
	double timeout_period_sec = 3.0;
	double start_time;

    public AutoRotate(float rotationAngle) {
    // Use requires() here to declare subsystem dependencies
        requires(Robot.drive);
        angle = rotationAngle;
        
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {    	
    	previousAutoRotate = Robot.drive.getAutoRotation();
    	Robot.drive.setAutoRotation(true);
    	Robot.drive.setSetpoint(angle);
		start_time = Timer.getFPGATimestamp();
    	count = 0;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.drive.doMecanum(0, 0, 0);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
		double curr_time = Timer.getFPGATimestamp();
		double total_time = curr_time - start_time;
        if ( Robot.drive.onTarget() ) {
        	count++;
        }
        if ( total_time > timeout_period_sec ) {
        	return true;
        }
    	return count > 2;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drive.setAutoRotation(previousAutoRotate);
    	Robot.drive.doMecanum(0, 0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
